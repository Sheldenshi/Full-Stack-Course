{"version":3,"sources":["Components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","then","response","data","notesToShow","filter","map","find","n","changedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","length","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"uJAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAC3B,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCPpCI,EAAU,sDAcD,EAZA,WACb,OAAOC,IAAMC,IAAIF,IAWJ,EARA,SAACG,GACd,OAAOF,IAAMG,KAAKJ,EAASG,IAOd,EAJA,SAACE,EAAIF,GAClB,OAAOF,IAAMK,IAAN,UAAaN,EAAb,YAAwBK,GAAMF,ICoExBI,EA3EH,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,OAGcF,mBAAS,IAHvB,mBAGTG,EAHS,KAGAC,EAHA,OAIcJ,oBAAS,GAJvB,mBAITK,EAJS,KAIAC,EAJA,KAKhBC,qBAAU,WACRC,IAEGC,MAAK,SAAAC,GACJR,EAASQ,EAASC,WAErB,IAEH,IAgBMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAA3B,GAAI,OAAuB,IAAnBA,EAAKG,aAuBhE,OACE,gCACE,uCACA,8BACE,yBAAQE,QAAS,kBAAMe,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAC5B,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAjD/B,SAAAU,GACzB,IAAMX,EAAOe,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAEnB,KAAOA,KAChCoB,EAAW,2BAAQ/B,GAAR,IAAcG,WAAYH,EAAKG,YAEhDmB,EACUX,EAAIoB,GACXR,MAAK,SAAAC,GACJR,EAASD,EAAMa,KAAI,SAAA5B,GAAI,OAAIA,EAAKW,KAAOA,EAAKX,EAAOwB,EAASC,YAE7DO,OAAM,SAAAC,GACLC,MAAM,aAAD,OACUlC,EAAKI,QADf,sCAGLY,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAEnB,KAAOA,SAoCsBwB,CAAmBnC,EAAKW,MAArEX,EAAKW,SAGpB,uBAAMyB,SAlCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB5B,GAAII,EAAMyB,OAAS,EACnBpC,QAASa,EACTwB,MAAM,IAAIC,MAAOC,cACjBxC,UAAWyC,KAAKC,SAAW,IAG7BvB,EACUiB,GACPhB,MAAK,SAAAC,GACJR,EAASD,EAAM+B,OAAOtB,EAASC,OAC/BP,EAAW,QAqBb,UACE,uBAAO6B,MAAO9B,EAAS+B,SAlBJ,SAACX,GACxBY,QAAQC,IAAIb,EAAMc,OAAOJ,OACzB7B,EAAWmB,EAAMc,OAAOJ,UAiBpB,wBAAQK,KAAK,SAAb,yBC7DRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c709c756.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n  return (\n    <li>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n      </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = 'https://boiling-taiga-28653.herokuapp.com/api/notes'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update \n}","import React, {useState, useEffect} from 'react'\nimport Note from './Components/Note'\nimport noteService from './services/notes'\n\n\nconst App = () => {\n  \n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(response => {\n        setNotes(response.data)\n      })\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n      .then(response => {\n        setNotes(notes.map(note => note.id !== id ? note : response.data))\n      })\n      .catch(error => {\n        alert(\n          `the note '${note.content}' was already deleted from server`\n        )\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n  \n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      id: notes.length + 1,\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n      \n    }\n    noteService\n      .create(noteObject)\n      .then(response => {\n        setNotes(notes.concat(response.data))\n        setNewNote('')\n      })\n    \n  }\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value)\n  }\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => \n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">\n          save\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\n\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}